/**
 * \mainpage
 *
 * This is SIMD oriented Fast Mersenne Twister pseudorandom number
 * generator(SFMT).
 *
 * This Project provides pseudorandom number generators of various
 * Mersenne Prime Period: from 2<sup>607</sup>-1 to
 * 2<sup>216091</sup>-1.
 *
 * Please check endianness in source codes carefully,
 * if you are using BIG ENDIAN.
 * - void sfmt_init_gen_rand() initializes the generator with
 *   a 32-bit integer seed.
 * - void sfmt_init_by_array() initializes the generator with
 *   an array of 32-bit integers as the seeds.
 * - uint32_t sfmt_genrand_uint32() generates and returns
 *   a pseudorandom 32-bit unsigned integer.
 * - uint64_t sfmt_genrand_uint64() generates and returns
 *   a pseudorandom 64-bit unsigned integer.
 * - void sfmt_fill_array32() fills the user-specified array with
 *   32-bit pseudorandom integers.
 * - void sfmt_fill_array64() fills the user-specified array with
 *   64-bit pseudorandom integers.
 * - inline static double sfmt_to_real1(uint32_t v) convert v to double on
 *   [0,1]-real-interval.
 * - inline static double sfmt_genrand_real1(sfmt_t * sfmt) generates a random
 *   number on [0,1]-real-interval.
 * - inline static double sfmt_to_real2(uint32_t v) convert v to double on
 *   [0,1)-real-interval.
 * - inline static double sfmt_genrand_real2(sfmt_t * sfmt) generates a random
 *   number on [0,1)-real-interval.
 * - inline static double sfmt_to_real3(uint32_t v) convert v to double on
 *   (0,1)-real-interval.
 * - inline static double sfmt_genrand_real3(sfmt_t * sfmt) generates a random
 *   number on (0,1)-real-interval.
 * - inline static double sfmt_to_res53(uint64_t v) convert v to double on
 *   [0,1) with 53-bit resolution
 * - inline static double sfmt_genrand_res53(sfmt_t * sfmt) generates a random
 *   number on [0,1) with 53-bit resolution
 * - inline static double sfmt_to_res53_mix(uint32_t x, uint32_t y) convert
 *   v to double on [0,1) with 53-bit resolution from two 32bit integers.
 * - inline static double sfmt_genrand_res53_mix(sfmt_t * sfmt) generates
 *   a random number on [0,1) with 53-bit resolution using 32bit generation.
 *
 *   Each SFMT.xxx.out.txt file contains 1000 outputs of sfmt_genrand_uint32()
 *   initialized by sfmt_init_gen_rand(1234), and 1000 outputs of
 *   sfmt_genrand_uint32() initialized by sfmt_init_by_array() with an array of
 *   {0x1234, 0x5678, 0x9abc, 0xdef0}.
 *
 *   see <a href="howto-compile.html">How to compile</a> to compile
 *   your program with SFMT optimized for SIMD.
 *
 * @author Mutsuo Saito (saito@math.sci.hiroshima-u.ac.jp) (Hiroshima University)
 * @author Makoto Matsumoto (The University of Tokyo)
 *
 * @date 2012-6-27
 *
 * Copyright (C) 2006, 2007 Mutsuo Saito, Makoto Matsumoto and Hiroshima
 * University. All rights reserved.
 * Copyright (C) 2012 Mutsuo Saito, Makoto Matsumoto, Hiroshima
 * University and The University of Tokyo.
 * All rights reserved.
 *
 * The 3-clause BSD License is applied to this software, see
 * LICENSE.txt
 * \verbinclude LICENSE.txt
 */
